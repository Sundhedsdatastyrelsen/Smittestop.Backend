# .NET Core

# execute on all branches
trigger:
- '*'

pool: 'Default'

variables:
  buildConfiguration: 'Release'
  hangfireProject: 'DIGNDB.APP.SmitteStop.Jobs\DIGNDB.APP.SmitteStop.Jobs.csproj'
  SQLDbContext: 'DigNDB_SmittestopContext'
  solution: '**/*.sln'
  buildPlatform: 'AnyCPU'

steps:

# Build the project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'Building'

# Run tests and collect code coverage
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Testing/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --collect "Code coverage" /p:Threshold=58 /p:ThresholdStat=total /p:thresholdType=line'
  displayName: 'Running tests'

# Create the deploy package for API
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/API'
    zipAfterPublish: True
  displayName: 'Build API deployment package'

# Create the deploy package for HangFire
- task: VSBuild@1
  inputs:
    solution: '$(hangfireProject)'
    msbuildArgs: '/p:DeployOnBuild=true /p:SkipInvalidConfigurations=true /p:OutputPath="$(Build.ArtifactStagingDirectory)/HANGFIRE"'    
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  displayName: 'Build HangFire deployment package'

# Create migration script
- powershell: |
   dotnet tool install --global dotnet-ef
   dotnet ef migrations script --output $(Build.ArtifactStagingDirectory)/MIGRATION/migrations_script.sql --context $(SQLDbContext) --idempotent --project DIGNDB.App.SmitteStop.DAL --startup-project DIGNDB.App.SmitteStop.API
  displayName: 'Create SQL database migration script'

# this uploads API package as an artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/API'
    artifactName: 'DIGNDB.App.SmitteStop.API'
  displayName: 'Publish API build artifacts'

# this uploads SQL migration script script as an artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/MIGRATION'
    artifactName: 'DIGNDB.App.SmitteStop-migration_script'
  displayName: 'Publish migration script artifact'

#this uploads HangFire package as an artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/HANGFIRE'
    artifactName: 'DIGNDB.App.SmitteStop-HangFire'
  displayName: 'Publish HangFire build artifact'